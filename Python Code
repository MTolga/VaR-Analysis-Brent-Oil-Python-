import pandas as pd
import numpy as np
import yfinance as yf
import matplotlib.pyplot as plt

# Define the parameters
ticker = "BZ=F"
confidence_level = 0.95
historical_data_period = "max"
investment_amount = 100000

# Retrieve the historical data
data = yf.download(ticker, period=historical_data_period)

# Select only the closing prices
data = pd.DataFrame(data["Close"])

# Calculate the daily returns
returns = data.pct_change().dropna()

# Calculate the mean and standard deviation of the returns
mean_return = np.mean(returns, axis=0)
std_return = np.std(returns, axis=0)

# Compute the VaR using a historical simulation approach
VaR = np.percentile(returns, 100 - confidence_level*100)

# Print the VaR
print(f"The {confidence_level*100}% VaR for {ticker} is {np.round(VaR, 2)*100}%")

# Plot the returns and VaR
fig, ax = plt.subplots(figsize=(10, 5))

# Plot the returns
ax.plot(returns.index, returns, label="Returns")

# Plot the VaR
VaR_line = ax.axhline(y=VaR, color="r", linestyle="--", label=f"{confidence_level*100}% VaR")

# Add labels and title
ax.set_xlabel("Date")
ax.set_ylabel("Returns")
ax.set_title(f"{ticker} Returns and VaR ({historical_data_period})")

# Add legend
ax.legend()

# Adjust the layout
fig.tight_layout()

# Show the plot
plt.show()
